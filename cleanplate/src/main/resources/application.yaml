spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
    group:
      local:
        - commnon
      prod:
        - common

---
spring:
  config:
    active:
      on-profile: commom

---
spring:
  config:
    active:
      on-profile: local
#  datasource:
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://localhost:3307/cleanplate?createDatabaseIfNotExist=true
#    username: ${DATASOURCE_USERNAME}
#    password: ${DATASOURCE_PASSWORD}

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://52.79.146.63:3306/clean_plate
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

  jpa:
    open-in-view: true
    defer-datasource-initialization: false # data.sql 이 실행
    show-sql: true
    hibernate.ddl-auto: update

    properties:
      hibernate.format_sql: true # 콘솔에 출력되는 쿼리를 보기 좋게 포맷팅
      hibernate.default_batch_fetch_size: 100
      hibernate.dialect: org.hibernate.dialect.MySQL5Dialect

  sql.init.mode: always # data.sql을 언제 작동시킬것인가

debug: false
management.endpoints.web.exposure.include: "*" # spring Boot Actuator의 모든 엔드포인트를 웹에서 노출


logging:
  level:
    com.myproject.cleanplate: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace



jwt:
  secret-key: ${JWT_SECRET-KEY}
  expired-time-ms: ${JWT_EXPIREDTIME_MS}


publicData:
    secretKey: ${PUBLIC_DATA_API-KEY}


openai.url:
  model: "https://api.openai.com/v1/models"
  model-list: "https://api.openai.com/v1/models/"
  legacy-prompt: "https://api.openai.com/v1/completions"
  prompt: "https://api.openai.com/v1/chat/completions"

openai.secretKey: ${OPENAI_SECRET-KEY}

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://52.79.146.63:3307/cleanplate?createDatabaseIfNotExist=true
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}


    jpa:
      open-in-view: true
      defer-datasource-initialization: false # data.sql 이 실행
      show-sql: true
      hibernate.ddl-auto: create

      properties:
        hibernate.format_sql: true # 콘솔에 출력되는 쿼리를 보기 좋게 포맷팅
        hibernate.default_batch_fetch_size: 100
        hibernate.dialect: org.hibernate.dialect.MySQL5Dialect

    sql.init.mode: always # data.sql을 언제 작동시킬것인가

  debug: false
  management.endpoints.web.exposure.include: "*" # spring Boot Actuator의 모든 엔드포인트를 웹에서 노출


  logging:
    level:
      com.myproject.cleanplate: debug
      org.springframework.web.servlet: debug
      org.hibernate.type.descriptor.sql.BasicBinder: trace



  jwt:
    secret-key: ${JWT_SECRET-KEY}
    expired-time-ms: ${JWT_EXPIREDTIME_MS}


  publicData:
    secretKey: ${PUBLIC_DATA_API-KEY}


  openai.url:
    model: "https://api.openai.com/v1/models"
    model-list: "https://api.openai.com/v1/models/"
    legacy-prompt: "https://api.openai.com/v1/completions"
    prompt: "https://api.openai.com/v1/chat/completions"

  openai.secretKey: ${OPENAI_SECRET-KEY}





